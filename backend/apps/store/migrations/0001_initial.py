# Generated by Django 4.1.5 on 2023-02-12 04:31

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):
    initial = True

    dependencies = [
        ("shipping", "0001_initial"),
        ("customer", "0003_initial"),
        ("contenttypes", "0002_remove_content_type_name"),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ("order", "0002_initial"),
        ("invoice", "0001_initial"),
        ("discount", "0002_initial"),
        ("payment", "0001_initial"),
        ("giftcard", "0002_initial"),
    ]

    operations = [
        migrations.CreateModel(
            name="Cart",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True, null=True)),
                ("updated_at", models.DateTimeField(auto_now=True, null=True)),
                ("email", models.EmailField(blank=True, max_length=254, null=True)),
                (
                    "type",
                    models.CharField(
                        choices=[
                            ("default", "Default"),
                            ("swap", "Swap"),
                            ("draft_order", "Draft Order"),
                            ("payment_link", "Payment Link"),
                            ("claim", "Claim"),
                        ],
                        default="default",
                        max_length=20,
                    ),
                ),
                ("completed_at", models.DateTimeField(blank=True, null=True)),
                ("payment_authorized_at", models.DateTimeField(blank=True, null=True)),
                (
                    "idempotency_key",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                ("context", models.JSONField(blank=True, null=True)),
                ("metadata", models.JSONField()),
                (
                    "billing_address",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="+",
                        to="customer.address",
                    ),
                ),
                (
                    "customer",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="+",
                        to="customer.customer",
                    ),
                ),
                (
                    "discounts",
                    models.ManyToManyField(
                        blank=True, related_name="+", to="discount.discount"
                    ),
                ),
                (
                    "gift_cards",
                    models.ManyToManyField(
                        blank=True, related_name="+", to="giftcard.giftcard"
                    ),
                ),
                (
                    "items",
                    models.ManyToManyField(
                        blank=True, related_name="+", to="invoice.lineitem"
                    ),
                ),
                (
                    "payment",
                    models.OneToOneField(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="+",
                        to="payment.payment",
                    ),
                ),
                (
                    "payment_session",
                    models.OneToOneField(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="+",
                        to="payment.paymentsession",
                    ),
                ),
                (
                    "region",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="customer.region",
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="Invite",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True, null=True)),
                ("updated_at", models.DateTimeField(auto_now=True, null=True)),
                ("user_email", models.EmailField(max_length=254, unique=True)),
                (
                    "role",
                    models.CharField(
                        choices=[
                            ("admin", "ADMIN"),
                            ("member", "MEMBER"),
                            ("developer", "DEVELOPER"),
                        ],
                        max_length=20,
                    ),
                ),
                ("accepted", models.BooleanField(default=False)),
                ("token", models.CharField(max_length=255)),
                ("expires_at", models.DateTimeField()),
                ("metadata", models.JSONField(null=True)),
                ("deleted_at", models.DateTimeField(null=True)),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="NotificationProvider",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True, null=True)),
                ("updated_at", models.DateTimeField(auto_now=True, null=True)),
                ("is_installed", models.BooleanField(default=True)),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="SalesChannel",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True, null=True)),
                ("updated_at", models.DateTimeField(auto_now=True, null=True)),
                ("name", models.CharField(max_length=255)),
                (
                    "description",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                ("is_disabled", models.BooleanField(default=False)),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="SalesChannelLocation",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True, null=True)),
                ("updated_at", models.DateTimeField(auto_now=True, null=True)),
                ("sales_channel_id", models.CharField(max_length=255)),
                ("location_id", models.CharField(max_length=255)),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="StagedJob",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True, null=True)),
                ("updated_at", models.DateTimeField(auto_now=True, null=True)),
                ("event_name", models.CharField(max_length=255)),
                ("data", models.JSONField()),
                ("options", models.JSONField(default=dict)),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="Swap",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True, null=True)),
                ("updated_at", models.DateTimeField(auto_now=True, null=True)),
                (
                    "fulfillment_status",
                    models.CharField(
                        choices=[
                            ("not_fulfilled", "NOT_FULFILLED"),
                            ("fulfilled", "FULFILLED"),
                            ("shipped", "SHIPPED"),
                            ("partially_shipped", "PARTIALLY_SHIPPED"),
                            ("canceled", "CANCELED"),
                            ("requires_action", "REQUIRES_ACTION"),
                        ],
                        default="NOT_FULFILLED",
                        max_length=20,
                    ),
                ),
                (
                    "payment_status",
                    models.CharField(
                        choices=[
                            ("not_paid", "NOT_PAID"),
                            ("awaiting", "AWAITING"),
                            ("captured", "CAPTURED"),
                            ("confirmed", "CONFIRMED"),
                            ("canceled", "CANCELED"),
                            ("difference_refunded", "DIFFERENCE_REFUNDED"),
                            ("partially_refunded", "PARTIALLY_REFUNDED"),
                            ("refunded", "REFUNDED"),
                            ("requires_action", "REQUIRES_ACTION"),
                        ],
                        default="NOT_PAID",
                        max_length=20,
                    ),
                ),
                ("difference_due", models.IntegerField(null=True)),
                ("confirmed_at", models.DateTimeField(null=True)),
                ("canceled_at", models.DateTimeField(null=True)),
                ("no_notification", models.BooleanField(null=True)),
                ("allow_back_order", models.BooleanField(default=False)),
                ("idempotency_key", models.CharField(max_length=255, null=True)),
                ("metadata", models.JSONField(null=True)),
                (
                    "cart",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="+",
                        to="store.cart",
                    ),
                ),
                (
                    "order",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="+",
                        to="order.order",
                    ),
                ),
                (
                    "payment",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="+",
                        to="payment.payment",
                    ),
                ),
                (
                    "return_order",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="+",
                        to="order.return",
                    ),
                ),
                (
                    "shipping_address",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="+",
                        to="customer.address",
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="Store",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True, null=True)),
                ("updated_at", models.DateTimeField(auto_now=True, null=True)),
                ("name", models.CharField(max_length=255)),
                (
                    "default_currency_code",
                    models.CharField(default="usd", max_length=255),
                ),
                ("swap_link_template", models.TextField(blank=True, null=True)),
                ("payment_link_template", models.TextField(blank=True, null=True)),
                ("invite_link_template", models.TextField(blank=True, null=True)),
                ("default_location_id", models.CharField(max_length=255, null=True)),
                ("metadata", models.JSONField(blank=True, null=True)),
                (
                    "default_sales_channel",
                    models.OneToOneField(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="store.saleschannel",
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="Note",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True, null=True)),
                ("updated_at", models.DateTimeField(auto_now=True, null=True)),
                ("value", models.TextField()),
                (
                    "resource_type",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                (
                    "resource_id",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                ("metadata", models.JSONField(null=True)),
                (
                    "author",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.AddField(
            model_name="cart",
            name="sales_channel",
            field=models.ForeignKey(
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="+",
                to="store.saleschannel",
            ),
        ),
        migrations.AddField(
            model_name="cart",
            name="shipping_address",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="+",
                to="customer.address",
            ),
        ),
        migrations.AddField(
            model_name="cart",
            name="shipping_methods",
            field=models.ManyToManyField(
                blank=True, related_name="+", to="shipping.shippingmethod"
            ),
        ),
        migrations.CreateModel(
            name="Notification",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True, null=True)),
                ("updated_at", models.DateTimeField(auto_now=True, null=True)),
                (
                    "level",
                    models.CharField(
                        choices=[
                            ("info", "Info"),
                            ("warning", "Warning"),
                            ("danger", "Danger"),
                            ("success", "Success"),
                        ],
                        default="success",
                        max_length=20,
                    ),
                ),
                ("unread", models.BooleanField(db_index=True, default=True)),
                ("verb", models.TextField()),
                ("description", models.TextField(blank=True, null=True)),
                (
                    "target_object_id",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                (
                    "action_object_object_id",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                (
                    "timestamp",
                    models.DateTimeField(
                        db_index=True, default=django.utils.timezone.now
                    ),
                ),
                ("public", models.BooleanField(db_index=True, default=True)),
                ("deleted", models.BooleanField(db_index=True, default=False)),
                ("emailed", models.BooleanField(db_index=True, default=False)),
                ("data", models.JSONField(blank=True, null=True)),
                (
                    "action_object_content_type",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="notify_action_object",
                        to="contenttypes.contenttype",
                    ),
                ),
                (
                    "actor",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="zenpro_notifications_actor",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "recipient",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="notifications",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "target_content_type",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="notify_target",
                        to="contenttypes.contenttype",
                    ),
                ),
            ],
            options={
                "ordering": ("-timestamp",),
                "index_together": {("recipient", "unread")},
            },
        ),
    ]
